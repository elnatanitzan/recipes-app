{"version":3,"sources":["components/Searchbar.js","components/Navbar.js","hooks/useFetch.js","components/RecipeList.js","pages/home/Home.js","pages/craete/Create.js","pages/recipe/Recipe.js","pages/search/Search.js","App.js","index.js"],"names":["Searchbar","useState","term","setTerm","history","useHistory","className","onKeyUp","e","target","value","length","push","htmlFor","id","type","onChange","required","placeholder","Navbar","to","useFetch","url","method","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","deleteRecipe","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","Error","statusText","json","console","log","name","abort","RecipeList","recipes","map","recipe","title","cookingTime","substring","Home","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","onSubmit","preventDefault","ref","onClick","ing","trim","includes","prevIngredients","current","focus","i","Recipe","useParams","alert","Search","qureyString","useLocation","search","query","URLSearchParams","get","message","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.753b8ac1.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Searchbar.scss';\r\n\r\nexport default function Searchbar() {\r\n    const [term, setTerm] = useState('')\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        // setTimeout(() => {     \r\n        // }, 500);\r\n        e.target.value.length === 0 ? history.push('/') : history.push(`/search?q=${term}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar\">\r\n            <form onKeyUp={handleSubmit}>\r\n                <label htmlFor=\"search\"></label>\r\n                <input\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    onChange={(e) => setTerm(e.target.value)}\r\n                    required\r\n                    placeholder=\"Search Recipe...\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport Searchbar from './Searchbar';\r\nimport './Navbar.scss';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <nav>\r\n                <Link className=\"brand\" to=\"/\">\r\n                <h1>CookBook</h1>\r\n                </Link>\r\n                <Searchbar />\r\n                <Link to=\"/create\">Create Recipe</Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const useFetch = (url, method = \"GET\") => {\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [options, setOptions] = useState(null)\r\n    const history = useHistory()\r\n    \r\n    const postData = (postData) => {\r\n        setOptions({\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })\r\n    }\r\n\r\n    const deleteRecipe = (id) => {\r\n        setOptions({\r\n            method: \"DELETE\",\r\n            id\r\n        })\r\n        return;    \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const controller = new AbortController()\r\n    \r\n        const fetchData = async (fetchOptions) => {\r\n            setIsPending(true)\r\n            try {\r\n                const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\r\n                if(!res.ok) {\r\n                    throw new Error(res.statusText)\r\n                   \r\n                }\r\n                const data = await res.json()\r\n                setIsPending(false)\r\n                setData(data)\r\n                setError(null)\r\n                if (fetchOptions && fetchOptions.method === 'DELETE') {\r\n                    console.log(fetchOptions)\r\n                    history.push('/');\r\n                } \r\n            } catch (err) {\r\n                console.log(err)\r\n                if (err.name === 'AbortError') {\r\n                    console.log('the fetch was aborted')\r\n                } else {\r\n                    setIsPending(false)\r\n                    setError(\"Could not fetch data\")\r\n                }\r\n            }\r\n             \r\n        }\r\n\r\n        if (method === 'GET') fetchData();\r\n        if (method === 'POST' && options) fetchData(options);\r\n        if (method === 'DELETE') fetchData(options);\r\n\r\n        return () => {\r\n            controller.abort()\r\n        }\r\n    }, [url, method, options, history])\r\n\r\n    return { data, error, isPending, postData, deleteRecipe }\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport './RecipeList.scss'\r\n\r\nexport default function RecipeList({ recipes }) {\r\n\r\n\r\n    if (recipes.length === 0) {\r\n        return <div className=\"error\">No recipes to load...</div>\r\n    }\r\n        return (\r\n        <div className=\"recipe-list\">\r\n            {recipes.map(recipe => (\r\n                <div key={recipe.id} className=\"card\">\r\n                    <h3>{recipe.title}</h3>\r\n                    <p>{recipe.cookingTime} to make.</p>\r\n                    <div>{recipe.method.substring(0, 100)}...</div>\r\n                    <Link to={`/recipes/${recipe.id}`}>Cook this</Link>\r\n                </div>    \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import { useFetch } from '../../hooks/useFetch';\r\nimport RecipeList from '../../components/RecipeList'\r\nimport './Home.scss';\r\n\r\nexport default function Home() {\r\n    const { data, isPending, error } = useFetch('https://my-recipes-api-server.herokuapp.com/recipes');\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {data && <RecipeList recipes={data} />}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Create.scss'\r\n\r\nexport default function Create() {\r\n    const [title, setTitle] = useState('')\r\n    const [method, setMethod] = useState()\r\n    const [cookingTime, setCookingTime] = useState('')\r\n    const [newIngredient, setNewIngredient] = useState('')\r\n    const [ingredients, setIngredients] = useState([])\r\n    const ingredientInput = useRef(null)\r\n\r\n    const { postData, data } = useFetch('https://my-recipes-api-server.herokuapp.com/recipes/', 'POST')\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        postData({ title, method,ingredients, cookingTime: `${cookingTime} minutes` })\r\n    }\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault()\r\n        const ing = newIngredient.trim()\r\n        if (ing && !ingredients.includes(ing)) {\r\n            setIngredients(prevIngredients => [...prevIngredients, newIngredient])\r\n        }\r\n        setNewIngredient('')\r\n        ingredientInput.current.focus()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            history.push('/')\r\n        }\r\n    }, [data, history])\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h3 className=\"page-title\">Add a New Recipe</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <span>Recipe title:</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        value={title}\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Recipe ingredients: </span>\r\n                    <div className=\"ingredients\">\r\n                        <input \r\n                            type=\"text\"\r\n                            onChange={(e) => setNewIngredient(e.target.value)}\r\n                            value={newIngredient}\r\n                            ref={ingredientInput}\r\n                        />\r\n                        <button onClick={handleAdd} className=\"btn\">Add</button>\r\n                    </div>\r\n                </label>\r\n                <p>Current ingredients: {ingredients.map(i => <em key={i}>{i}, </em>)}</p>\r\n\r\n                <label>\r\n                    <span>Recipe Method:</span>\r\n                    <textarea\r\n                        onChange={(e) => setMethod(e.target.value)}\r\n                        value={method}\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Cooking Time (in minutes):</span>\r\n                    <input\r\n                        type=\"number\"\r\n                        onChange={(e) => setCookingTime(e.target.value)}\r\n                        value={cookingTime}\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <button className=\"btn\">Submit</button>\r\n            </form>    \r\n        </div>\r\n    )\r\n}\r\n","import { useParams } from 'react-router-dom'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport './Recipe.scss'\r\n\r\nexport default function Recipe() {\r\n    \r\n    const { id } = useParams()\r\n    const url = `https://my-recipes-api-server.herokuapp.com/recipes/${id}`\r\n    const { error, isPending, data: recipe } = useFetch(url)\r\n    const { deleteRecipe } = useFetch(url, 'DELETE')\r\n\r\n    const deleteThisRecipe = () => {\r\n        deleteRecipe(id)\r\n        alert('Recipe deleted!')\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipe\">\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {recipe && (\r\n                <>\r\n                    <h2 className=\"page-title\">{recipe.title}</h2>\r\n                    <p>Tasks {recipe.cookingTime} to cook.</p>\r\n                    <ul>\r\n                        {recipe.ingredients.map(ing => <li key={ing}>{ing}</li>)}\r\n                    </ul>\r\n                    <p className=\"method\">{recipe.method}</p>\r\n                    <button onClick={() =>  deleteThisRecipe()}>Delete</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import { useFetch } from \"../../hooks/useFetch\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport RecipeList from \"../../components/RecipeList\"\r\nimport './Search.css'\r\n\r\nexport default function Search() {\r\n    const qureyString = useLocation().search\r\n    const queryParams = new URLSearchParams(qureyString)\r\n    const query = queryParams.get('q')\r\n\r\n    const url = `https://my-recipes-api-server.herokuapp.com/recipes?q=${query}`\r\n    const { data, isPending, error } = useFetch(url)\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\r\n            {error && <p className=\"error\">{error.message}</p>}\r\n            {isPending && <p className=\"loading\">Loading...</p>}\r\n            {data && <RecipeList recipes={data} />}\r\n        </div>\r\n    )\r\n}\r\n","import { HashRouter, Switch, Route} from 'react-router-dom';\r\nimport './App.scss';\r\nimport React from 'react'\r\n\r\n//pages & components \r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/home/Home';\r\nimport Create from './pages/craete/Create';\r\nimport Recipe from './pages/recipe/Recipe';\r\nimport Search from './pages/search/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n      <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/create\">\r\n            <Create />\r\n          </Route>\r\n          <Route path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route path=\"/recipes/:id\">\r\n            <Recipe />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}